{"version":3,"sources":["components/AddCategory/AddCategory.js","utils/getGifs.js","components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","addCategory","useState","category","setCategory","className","onSubmit","event","preventDefault","cat","type","value","onChange","target","placeholder","getGifs","a","fetch","encodeURI","json","data","collection","map","id","title","urlGif","images","downsized","url","console","log","GifGrid","loading","initialState","setInitialState","useEffect","useFetchGifs","gif","toUpperCase","src","alt","defaultProps","GifExpertApp","categories","setCategories","style","textAlign","cate","ReactDOM","render","document","getElementById"],"mappings":"uPAsCeA,MAjCf,YAAuC,IAAhBC,EAAe,EAAfA,YACrB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAYA,OACE,uBAAMC,UAAU,eAAeC,SATJ,SAAAC,GAC3BA,EAAMC,iBACFL,IACFF,GAAY,SAAAQ,GAAG,OAAKN,GAAL,mBAAkBM,OACjCL,EAAY,MAKd,UACE,uBACEC,UAAU,2BACVK,KAAK,OACLC,MAAOR,EACPS,SAhBwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAAYS,EAAOF,QAiB3DG,YAAY,sBAEd,wBAAQT,UAAU,uBAAuBK,KAAK,SAA9C,mC,uBCzBOK,EAAO,uCAAG,WAAMZ,GAAN,mBAAAa,EAAA,0DACjBb,EADiB,0CAITc,MAAM,gDAAD,OANJ,mCAMI,cACmDC,UAC1Df,GAFO,cAJI,8BASfgB,OATe,uBAGTC,EAHS,EAGTA,KAQFC,EAAaD,EAAKE,KAAI,kBAA4B,CACtDC,GAD0B,EAAGA,GAE7BC,MAF0B,EAAOA,MAGjCC,OAH0B,EAAcC,OAGzBC,UAAUC,QAdV,kBAgBVP,GAhBU,kCAkBjBQ,QAAQC,IAAR,MAlBiB,0DAAH,sD,MCKpB,SAASC,EAAT,GAAgC,IAAb5B,EAAY,EAAZA,SACjB,ECJ0B,SAAAA,GAC1B,MAAwCD,mBAAS,CAC/CkB,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAqBC,EAArB,KAkBA,OAbAC,qBAAU,WACR,sBAAC,4BAAAnB,EAAA,+EAEsBD,EAAQZ,GAF9B,OAESiB,EAFT,OAGGc,EAAgB,CACdd,OACAY,SAAS,IALd,gDAQGH,QAAQC,IAAR,MARH,wDAAD,KAWC,IACIG,EDfmBG,CAAajC,GAA/BiB,EAAR,EAAQA,KAAMY,EAAd,EAAcA,QAEd,OACE,qCACGA,GAAW,yDACZ,sBAAK3B,UAAU,gDAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCF,IACjC,qBAAKE,UAAU,iBAAf,SACGe,EAAKE,KAAI,SAAAe,GAAG,OACX,sBAAKhC,UAAU,sBAAf,UACE,oBAAIA,UAAU,sBAAd,SAAqCgC,EAAIb,MAAMc,gBAC/C,qBAAKjC,UAAU,gBAAgBkC,IAAKF,EAAIZ,OAAQe,IAAKH,EAAIb,UAFjBa,EAAId,eAW1DQ,EAAQU,aAAe,CACrBtC,SAAU,IAOG4B,QEhBAW,MAff,WACE,MAAoCxC,mBAAS,IAA7C,mBAAOyC,EAAP,KAAmBC,EAAnB,KAEA,OACE,qCACE,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,+BACA,cAAC,EAAD,CAAa7C,YAAa2C,IAC1B,uBACCD,EAAWrB,KAAI,SAAAyB,GAAI,OAClB,cAAC,EAAD,CAAoB5C,SAAU4C,GAAhBA,U,MCPtBC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.f9a991bd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './AddCategory.css';\r\n\r\nfunction AddCategory({ addCategory }) {\r\n  const [category, setCategory] = useState('');\r\n\r\n  const handleChangesCategory = ({ target }) => setCategory(target.value);\r\n\r\n  const handleSubmitCategory = event => {\r\n    event.preventDefault();\r\n    if (category) {\r\n      addCategory(cat => [category, ...cat]);\r\n      setCategory('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='add-category' onSubmit={handleSubmitCategory}>\r\n      <input\r\n        className='add-category__search-box'\r\n        type='text'\r\n        value={category}\r\n        onChange={handleChangesCategory}\r\n        placeholder='Agregar Categoria'\r\n      />\r\n      <button className='add-category__button' type='submit'>\r\n        Agregar Categoria\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  addCategory: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","const apiKey = 'BQhSthjbP9NOXgxUL6W5PsjbtuKfXEa8';\r\n\r\nexport const getGifs = async category => {\r\n  if (category) {\r\n    try {\r\n      const { data } = await (\r\n        await fetch(\r\n          `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(\r\n            category\r\n          )}&limit=10`\r\n        )\r\n      ).json();\r\n\r\n      const collection = data.map(({ id, title, images }) => ({\r\n        id,\r\n        title,\r\n        urlGif: images.downsized.url,\r\n      }));\r\n      return collection;\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\r\n\r\nimport './GifGrid.css';\r\n\r\nfunction GifGrid({ category }) {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      {loading && <h2>Cargando Im√°genes...</h2>}\r\n      <div className='gif-grid animate__animated animate__slideInUp'>\r\n        <h2 className='gif-grid__title'>{category}</h2>\r\n        <div className='gif-grid__grid'>\r\n          {data.map(gif => (\r\n            <div className='gif-grid__container' key={gif.id}>\r\n              <h5 className='gif-grid__gif-title'>{gif.title.toUpperCase()}</h5>\r\n              <img className='gif-grid__gif' src={gif.urlGif} alt={gif.title} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nGifGrid.defaultProps = {\r\n  category: '',\r\n};\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { getGifs } from '../utils/getGifs';\r\n\r\nexport const useFetchGifs = category => {\r\n  const [initialState, setInitialState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const data = await getGifs(category);\r\n        setInitialState({\r\n          data,\r\n          loading: false,\r\n        });\r\n      } catch (ex) {\r\n        console.log(ex);\r\n      }\r\n    })();\r\n  }, []);\r\n  return initialState;\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory/AddCategory';\r\nimport GifGrid from './components/GifGrid/GifGrid';\r\n\r\nfunction GifExpertApp() {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ textAlign: 'center' }}>Giphy Application</h1>\r\n      <AddCategory addCategory={setCategories} />\r\n      <hr />\r\n      {categories.map(cate => (\r\n        <GifGrid key={cate} category={cate} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}